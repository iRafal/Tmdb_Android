[versions]
#region BUILD TOOLS
# https://developer.android.com/studio/releases/gradle-plugin
# https://developer.android.com/build/releases/past-releases
gradle = "8.11.0"
#endregion BUILD TOOLS

#region KOTLIN
#https://kotlinlang.org/docs/jvm-test-using-junit.html#add-the-code-to-test-it
#https://mvnrepository.com/artifact/org.jetbrains.kotlin/kotlin-test
kotlin-test = "2.1.20" # Update together with marked dependencies
kotlin = "2.1.20" # https://mvnrepository.com/artifact/org.jetbrains.kotlin.plugin.compose/org.jetbrains.kotlin.plugin.compose.gradle.plugin
kotlin-coroutines = "1.10.2" # https://github.com/kotlin/kotlinx.coroutines
kotlin-serialization-json = "1.9.0" # https://github.com/Kotlin/kotlinx.serialization

# https://github.com/google/ksp/releases
# https://mvnrepository.com/artifact/com.google.devtools.ksp/com.google.devtools.ksp.gradle.plugin?repo=central
ksp = "2.1.20-2.0.1"
#endregion KOTLIN

#region ANDROIDX
androidx-core = "1.16.0" # https://developer.android.com/jetpack/androidx/releases/core
androidx-splashscreen = "1.1.0-rc01" # https://mvnrepository.com/artifact/androidx.core/core-splashscreen?repo=google
androidx-lifecycle = "2.9.1" # https://developer.android.com/jetpack/androidx/releases/lifecycle
androidx-lifecycle-compose = "2.9.1" # https://developer.android.com/jetpack/androidx/releases/lifecycle
androidx-work = "2.10.2" # https://developer.android.com/jetpack/androidx/releases/work
androidx-window-core = "1.4.0" # https://developer.android.com/jetpack/androidx/releases/window
androidx-material3-window-size = "1.3.2" # https://developer.android.com/jetpack/androidx/releases/compose-material3
androidx-metrics = "1.0.0-beta02" # https://developer.android.com/jetpack/androidx/releases/metrics
androidx-media3 = "1.7.1" # //https://developer.android.com/jetpack/androidx/releases/media3
androidx-biometrics = "1.1.0" # https://mvnrepository.com/artifact/androidx.biometric/biometric
androidx-biometrics-ktx = "1.4.0-alpha02" # https://mvnrepository.com/artifact/androidx.biometric/biometric-ktx
androidx-credentials = "1.5.0" # https://mvnrepository.com/artifact/androidx.credentials/credentials
androidx-credentials-play-auth = "1.5.0" # https://mvnrepository.com/artifact/androidx.credentials/credentials-play-services-auth
#endregion ANDROIDX

#region UI
coil = "3.2.0" # https://github.com/coil-kt/coil
coil-ktor = "3.0.0-alpha08" # https://github.com/coil-kt/coil
material-components-android = "1.12.0" # https://github.com/material-components/material-components-android
#endregion UI

#region COMPOSE
compose-bom = "2025.06.01" # https://developer.android.com/develop/ui/compose/bom/bom-mapping
compose-activity = "1.10.1" # https://developer.android.com/jetpack/androidx/releases/activity
compose-navigation = "2.9.1" # https://developer.android.com/jetpack/androidx/releases/navigation
compose-navigation3 = "1.0.0-alpha05" # https://developer.android.com/jetpack/androidx/releases/navigation3

# https://developer.android.com/jetpack/compose/layouts/constraintlayout
# https://mvnrepository.com/artifact/androidx.constraintlayout/constraintlayout-compose?repo=google
compose-constraintLayout = "1.1.1"

accompanist = "0.37.3" # https://github.com/google/accompanist
#endregion COMPOSE

#region STORAGE
room = "2.7.2" # https://developer.android.com/jetpack/androidx/releases/room

# https://developer.android.com/jetpack/androidx/releases/security
# https://developer.android.com/reference/androidx/security/crypto/EncryptedSharedPreferences
securityCrypto = "1.1.0-beta01"

# https://github.com/google/protobuf-gradle-plugin
google-protobuf = "0.9.5"

# https://mvnrepository.com/artifact/com.google.protobuf/protobuf-javalite
google-protobuf-javalite = "4.31.1"

# https://developer.android.com/topic/libraries/architecture/datastore
androidx-datastore = "1.1.7"

objectBox = "4.3.0" # https://github.com/objectbox/objectbox-java

realm-plugin = "10.19.0" # https://github.com/realm/realm-java
#endregion STORAGE

#region NETWORK
ktor = "3.1.3" # https://github.com/ktorio/ktor

retrofit2 = "3.0.0" # https://github.com/square/retrofit
retrofit2-serializationConverter = "1.0.0" # https://github.com/jakewharton/retrofit2-kotlinx-serialization-converter
okhttp3-loggingInterceptor = "4.12.0" # https://github.com/square/okhttp/tree/master/okhttp-logging-interceptor
okhttp3-mockwebserver = "4.12.0" # https://github.com/square/okhttp/tree/master/mockwebserver
#endregion NETWORK

#region TEST

junit = "4.13.2" # https://mvnrepository.com/artifact/junit/junit

# https://developer.android.com/training/testing/set-up-project
# https://developer.android.com/jetpack/androidx/releases/test
junit-android-ext = "1.2.1"

# https://mvnrepository.com/artifact/androidx.test.espresso/espresso-core
# https://developer.android.com/training/testing/set-up-project
# https://developer.android.com/jetpack/androidx/releases/test
espresso = "3.6.1"

mockito = "5.18.0" # https://github.com/mockito/mockito
mockito-kotlin = "5.4.0" # https://github.com/mockito/mockito-kotlin
#endregion TEST

#region TOOLS
leakcanary = "2.14" # https://square.github.io/leakcanary/getting_started/
logging = "0.2.3" # https://github.com/square/logcat
kotlinx-dateTime = "0.7.0" # https://github.com/Kotlin/kotlinx-datetime
kotlinx-collections-immutable = "0.4.0" # https://github.com/Kotlin/kotlinx.collections.immutable
google-phoneNumber = "9.0.8" # https://github.com/google/libphonenumber
playServicesBase = "18.7.0" # https://mvnrepository.com/artifact/com.google.android.gms/play-services-base
google-services = "4.4.3" # https://firebase.google.com/docs/android/troubleshooting-faq#add-plugins-using-buildscript-syntax
android-tools-desugaring = "2.1.5" # https://mvnrepository.com/artifact/com.android.tools/desugar_jdk_libs
google-crypto-tink-android = "1.18.0" # https://mvnrepository.com/artifact/com.google.crypto.tink/tink-android

# https://mvnrepository.com/artifact/com.airbnb.android/lottie-compose
# https://github.com/airbnb/lottie/blob/master/android-compose.md
# https://github.com/airbnb/lottie-android/releases
lottie = "6.6.7"

# https://github.com/jlleitschuh/ktlint-gradle
ktlint = "12.3.0"

# https://detekt.dev/docs/intro
# https://github.com/detekt/detekt
detekt = "1.23.8"

# https://github.com/Kotlin/kotlinx-kover
kotlinx-kover = "0.9.1"
#endregion TOOLS

#region ANALYTICS
# https://mvnrepository.com/artifact/com.google.firebase/firebase-messaging
firebase-messaging = "24.1.2"

# https://mvnrepository.com/artifact/com.google.firebase/firebase-analytics
firebase-analytics = "22.5.0"

# https://mvnrepository.com/artifact/com.google.firebase/firebase-crashlytics
firebase-crashlytics = "19.4.4"

# https://mvnrepository.com/artifact/com.google.firebase/firebase-crashlytics-gradle
firebase-crashlytics-plugin = "3.0.4"
#endregion ANALYTICS

#region DI
dagger = "2.56.2" # https://github.com/google/dagger/releases
#endregion DI

[libraries]

#region KOTLIN
kotlin-stdLib = { module = "org.jetbrains.kotlin:kotlin-stdlib-jdk7", version.ref = "kotlin" }
kotlin-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "kotlin-coroutines" }
kotlin-coroutines-android = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "kotlin-coroutines" }
kotlin-coroutines-test = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "kotlin-coroutines" }
kotlin-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlin-serialization-json" }
#endregion KOTLIN

#region ANDROIDX
androidx-core = { module = "androidx.core:core-ktx", version.ref = "androidx-core" }
androidx-window-core = { group = "androidx.window", name = "window-core", version.ref = "androidx-window-core" }
androidx-material3-window-size = { group = "androidx.compose.material3", name = "material3-window-size-class", version.ref = "androidx-material3-window-size" }
androidx-splashscreen = { module = "androidx.core:core-splashscreen", version.ref = "androidx-splashscreen" }
androidx-lifecycle-runtime-ktx = { module = "androidx.lifecycle:lifecycle-runtime-ktx", version.ref = "androidx-lifecycle" }
androidx-lifecycle-viewmodel-ktx = { module = "androidx.lifecycle:lifecycle-viewmodel-ktx", version.ref = "androidx-lifecycle" }
androidx-lifecycle-viewmodel-compose = { module = "androidx.lifecycle:lifecycle-viewmodel-compose", version.ref = "androidx-lifecycle" }
androidx-work-runtime = { module = "androidx.work:work-runtime-ktx", version.ref = "androidx-work" }
androidx-lifecycle-compose = { group = "androidx.lifecycle", name = "lifecycle-runtime-compose", version.ref = "androidx-lifecycle-compose" }
androidx-metrics = { group = "androidx.metrics", name = "metrics-performance", version.ref = "androidx-metrics" }
androidx-media3-exoplayer = { group = "androidx.media3", name = "media3-exoplayer", version.ref = "androidx-media3" }
androidx-media3-ui = { group = "androidx.media3", name = "media3-ui", version.ref = "androidx-media3" }
androidx-biometrics = { group = "androidx.biometric", name = "biometric", version.ref = "androidx-biometrics" }
androidx-biometrics-ktx = { group = "androidx.biometric", name = "biometric-ktx", version.ref = "androidx-biometrics-ktx" }
androidx-credentials = { group = "androidx.credentials", name = "credentials", version.ref = "androidx-credentials" }
androidx-credentials-play-auth = { group = "androidx.credentials", name = "credentials-play-services-auth", version.ref = "androidx-credentials-play-auth" }
#endregion ANDROIDX

#region UI
material-components-android = { module = "com.google.android.material:material", version.ref = "material-components-android" }

coil = { module = "io.coil-kt.coil3:coil", version.ref = "coil" }
coil-video = { module = "io.coil-kt.coil3:coil-video", version.ref = "coil" }
coil-compose = { module = "io.coil-kt.coil3:coil-compose", version.ref = "coil" }
coil-network-okhttp = { module = "io.coil-kt.coil3:coil-network-okhttp", version.ref = "coil" }
coil-network-ktor = { module = "io.coil-kt.coil3:coil-network-ktor", version.ref = "coil-ktor" }
#endregion UI

#region COMPOSE
compose-bom = { module = "androidx.compose:compose-bom", version.ref = "compose-bom" }
compose-ui = { module = "androidx.compose.ui:ui" }
compose-ui-preview = { module = "androidx.compose.ui:ui-tooling-preview" }
compose-ui-tooling-debug = { module = "androidx.compose.ui:ui-tooling" }
compose-ui-test-manifest-debug = { module = "androidx.compose.ui:ui-test-manifest" }
compose-ui-test-junit = { module = "androidx.compose.ui:ui-test-junit4" }
compose-viewBinding = { module = "androidx.compose.ui:ui-viewbinding" }

compose-material = { module = "androidx.compose.material:material" }
compose-material3 = { module = "androidx.compose.material3:material3" }
compose-material-iconsExtended = { module = "androidx.compose.material:material-icons-extended" }

compose-animation = { module = "androidx.compose.animation:animation" }
compose-foundation = { module = "androidx.compose.foundation:foundation" }
compose-runtime = { module = "androidx.compose.runtime:runtime" }

compose-activity = { module = "androidx.activity:activity-compose", version.ref = "compose-activity" }
compose-constraintLayout = { module = "androidx.constraintlayout:constraintlayout-compose", version.ref = "compose-constraintLayout" }
compose-navigation = { module = "androidx.navigation:navigation-compose", version.ref = "compose-navigation" }
compose-navigation-test = { module = "androidx.navigation:navigation-testing", version.ref = "compose-navigation" }
compose-navigation3-runtime = { module = "androidx.navigation3:navigation3-runtime", version.ref = "compose-navigation3" }
compose-navigation3-ui = { module = "androidx.navigation3:navigation3-ui", version.ref = "compose-navigation3" }

accompanist-permissions-compose = { module = "com.google.accompanist:accompanist-permissions", version.ref = "accompanist" } #TODO remove it as we are not asking for a permission
#endregion COMPOSE

#region STORAGE
room-runtime = { module = "androidx.room:room-runtime", version.ref = "room" }
room-ktx = { module = "androidx.room:room-ktx", version.ref = "room" }
room-compiler = { module = "androidx.room:room-compiler", version.ref = "room" }
room-test = { module = "androidx.room:room-testing", version.ref = "room" }
androidx-security-crypto = { group = "androidx.security", name = "security-crypto", version.ref = "securityCrypto" }
androidx-datastore = { group = "androidx.datastore", name = "datastore", version.ref = "androidx-datastore" }
google-protobuf-javalite = { group = "com.google.protobuf", name = "protobuf-javalite", version.ref = "google-protobuf-javalite" }
#endregion STORAGE

#region NETWORK
ktor-client-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor-client-serialization = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }
ktor-client-android = { module = "io.ktor:ktor-client-android", version.ref = "ktor" }
ktor-client-content-negotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }
ktor-client-logging = { module = "io.ktor:ktor-client-logging", version.ref = "ktor" }
ktor-client-mock = { module = "io.ktor:ktor-client-mock", version.ref = "ktor" }
ktor-client-auth = { module = "io.ktor:ktor-client-auth", version.ref = "ktor" }

retrofit2 = { module = "com.squareup.retrofit2:retrofit", version.ref = "retrofit2" }
retrofit2-scalars = { module = "com.squareup.retrofit2:converter-scalars", version.ref = "retrofit2" }
retrofit2-serializationConverter = { module = "com.jakewharton.retrofit:retrofit2-kotlinx-serialization-converter", version.ref = "retrofit2-serializationConverter" }
okHttp3-loggingInterceptor = { module = "com.squareup.okhttp3:logging-interceptor", version.ref = "okhttp3-loggingInterceptor" }
okHttp3-mockwebserver = { module = "com.squareup.okhttp3:mockwebserver", version.ref = "okhttp3-mockwebserver" }
#endregion NETWORK

#region TEST
junit = { module = "junit:junit", version.ref = "junit" }
junit-android-ext = { module = "androidx.test.ext:junit", version.ref = "junit-android-ext" }
espresso = { module = "androidx.test.espresso:espresso-core", version.ref = "espresso" }
mockito = { module = "org.mockito:mockito-core", version.ref = "mockito" }
mockito-kotlin = { module = "org.mockito.kotlin:mockito-kotlin", version.ref = "mockito-kotlin" }
kotlin-test = { module = "org.jetbrains.kotlin:kotlin-test", version.ref = "kotlin-test" }
#endregion TEST

#region TOOLS
leakCanary-debug = { module = "com.squareup.leakcanary:leakcanary-android", version.ref = "leakcanary" }
logging = { module = "com.squareup.logcat:logcat", version.ref = "logging" }
kotlinx-dateTime = { module = "org.jetbrains.kotlinx:kotlinx-datetime", version.ref = "kotlinx-dateTime" }
kotlinx-collections-immutable = { group = "org.jetbrains.kotlinx", name = "kotlinx-collections-immutable", version.ref = "kotlinx-collections-immutable" }
phoneNumber = { module = "com.googlecode.libphonenumber:libphonenumber", version.ref = "google-phoneNumber" }
play-services-base = { group = "com.google.android.gms", name = "play-services-base", version.ref = "playServicesBase" }
lottie = { group = "com.airbnb.android", name = "lottie-compose", version.ref = "lottie" }
android-tools-desugaring = { group = "com.android.tools", name = "desugar_jdk_libs", version.ref = "android-tools-desugaring" }
google-crypto-tink-android = { group = "com.google.crypto.tink", name = "tink-android", version.ref = "google-crypto-tink-android"}
#endregion TOOLS

#region ANALYTICS
firebase-messaging = { group = "com.google.firebase", name = "firebase-messaging", version.ref = "firebase-messaging" }
firebase-analytics = { group = "com.google.firebase", name = "firebase-analytics", version.ref = "firebase-analytics" }
firebase-crashlytics = { group = "com.google.firebase", name = "firebase-crashlytics", version.ref = "firebase-crashlytics" }
#endregion ANALYTICS

#region DI
dagger = { module = "com.google.dagger:dagger", version.ref = "dagger" }
dagger-compiler = { module = "com.google.dagger:dagger-compiler", version.ref = "dagger" }
#endregion DI

#region PLUGINS
objectBox = { group = "io.objectbox", name = "objectbox-gradle-plugin", version.ref = "objectBox" }
realm-plugin = { group = "io.realm", name = "realm-gradle-plugin", version.ref = "realm-plugin" }
#endregion PLUGINS

[plugins]
detekt = { id = "io.gitlab.arturbosch.detekt", version.ref = "detekt" }
ktlint = { id = "org.jlleitschuh.gradle.ktlint", version.ref = "ktlint" }
kotlinx-kover = { id = "org.jetbrains.kotlinx.kover", version.ref = "kotlinx-kover" }
android-application = { id = "com.android.application", version.ref = "gradle" }
android-library = { id = "com.android.library", version.ref = "gradle" }
kotlin-android = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
kotlin-jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
kotlin-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
java-library = { id = "java-library" }
kotlin = { id = "kotlin" }
google-protobuf = { id = "com.google.protobuf", version.ref = "google-protobuf" }
compose-compiler = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }
ksp = { id = "com.google.devtools.ksp", version.ref = "ksp" }
google-services = { id = "com.google.gms.google-services", version.ref = "google-services" }
firebase-crashlytics = { id = "com.google.firebase.crashlytics", version.ref = "firebase-crashlytics-plugin" }
objectbox = { id = "io.objectbox" }
realm-android = { id = "realm-android" }

[bundles]
data-source-local-impl = [
    "kotlin-stdLib",
    "kotlin-coroutines-core",
    "kotlin-coroutines-android",
    #
    "dagger",
    #
    "kotlinx-dateTime"
]
data-source-local-impl-test = [
    "kotlin-test",
    "mockito",
    "mockito-kotlin",
    #
    "kotlin-coroutines-test",
    #
    "kotlinx-dateTime"
]

feature-ui-impl-test = [
    "kotlin-test",
    #
    "mockito",
    "mockito-kotlin",
    #
    "kotlin-coroutines-test",
]

ui-test-android = [
    "junit-android-ext",
    #
    "mockito",
    "mockito-kotlin",
    #
    "espresso",
    #
    "kotlin-test",
    "kotlin-coroutines-test",
    #
    "compose-ui-test-manifest-debug",
    "compose-ui-test-junit"
]
